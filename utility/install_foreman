#!/bin/bash -i

##
## variables
##
FOREMAN='1.23.0'
RUBY_VERSION='2.6.0'
FOREMAN_SHORT="${FOREMAN%.*}"
HOSTNAME=$(hostname)
PUPPET_PATH='/opt/puppetlabs/puppet/bin'
PROMPT=false
REBOOT=false
PROXY_IP='null'
PROXY_PORT='null'

##
## cli arguments: optional
##
for i in "$@"; do
    case $i in
        -p=*|--prompt=*)
        PROMPT="${i#*=}"
        ;;

        -ip=*|--proxy-ip=*)
        PROXY_IP="${i#*=}"
        ;;

        -port=*|--proxy-port=*)
        PROXY_PORT="${i#*=}"
        ;;

        -foreman=*|--foreman-version=*)
        FOREMAN="${i#*=}"
        FOREMAN_SHORT="${FOREMAN%.*}"
        ;;

        -ruby=*|--ruby-version=*)
        RUBY_VERSION="${i#*=}"
        ;;

        -r=*|--reboot=*)
        REBOOT="${i#*=}"
        ;;

        *)
        echo "ERROR: ${i} is not a valid option"
        ;;
    esac
done

##
## prompt proxy configurations
##
if [[ "$PROMPT" = true ]]; then
    CORRECT_PROXY='n'
    read -rp 'Setup proxy > ' SETUP_PROXY
    if [ "${SETUP_PROXY,,}" == 'y' ] && \
        [ "${SETUP_PROXY,,}" == 'yes' ] && \
        [ "${SETUP_PROXY,,}" == 'true' ] && \
        [ "${SETUP_PROXY,,}" == 'ok' ]; then

        while [ "${CORRECT_PROXY,,}" != 'y' ] && \
            [ "${CORRECT_PROXY,,}" != 'yes' ] && \
            [ "${CORRECT_PROXY,,}" != 'true' ] && \
            [ "${CORRECT_PROXY,,}" != 'ok' ]; do

            ## acquire proxy ip
            read -rp 'Enter your proxy ip > ' PROXY_IP

            ## acquire proxy port
            read -rp 'Enter your proxy port > ' PROXY_PORT

            ## verify submission
            echo "Your proxy: $PROXY_IP:$PROXY_PORT"
            read -rp 'Is this correct (y) > ' CORRECT_PROXY
        done
    fi

    ##
    ## prompt foreman version
    ##
    CORRECT_FOREMAN='n'
    while [ "${CORRECT_FOREMAN,,}" != 'y' ] && \
        [ "${CORRECT_FOREMAN,,}" != 'yes' ] && \
        [ "${CORRECT_FOREMAN,,}" != 'true' ] && \
        [ "${CORRECT_FOREMAN,,}" != 'ok' ]; do

        read -rp "Install foreman $FOREMAN (y) > " CORRECT_FOREMAN

        if [ "${CORRECT_FOREMAN,,}" != 'y' ] && \
            [ "${CORRECT_FOREMAN,,}" != 'yes' ] && \
            [ "${CORRECT_FOREMAN,,}" != 'true' ] && \
            [ "${CORRECT_FOREMAN,,}" != 'ok' ]; then
            read -rp "Enter desired foreman version (i.e. '$FOREMAN', or 'latest') > " FOREMAN
        fi
    done
fi

##
## setup proxy
##
if [ "$PROXY_IP" != 'null' ] && [ "$PROXY_PORT" != 'null' ]; then
    ## lasts until reboot
    export "http_proxy=http://$PROXY_IP:$PROXY_PORT"
    export "https_proxy=https://$PROXY_IP:$PROXY_PORT"

    ## persistent after reboot
    echo "http_proxy=http://$PROXY_IP:$PROXY_PORT" >> /etc/environment
    echo "https_proxy=https://$PROXY_IP:$PROXY_PORT" >> /etc/environment
fi

##
## ruby: required for puppet
##
sudo yum update -y
sudo yum install -y curl gpg gcc gcc-c++ make
sudo gpg \
    --keyserver hkp://pool.sks-keyservers.net \
    --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
curl -sSL https://get.rvm.io | sudo bash -s stable
sudo usermod -a -G rvm "$(whoami)"

rvm install "ruby-${RUBY_VERSION}"
rvm --default use "ruby-${RUBY_VERSION}"

##
## enable RHEL Optional and RHSCL repos
##
if grep -q 'Red Hat' /etc/redhat-release; then
    yum-config-manager --enable rhel-7-server-optional-rpms rhel-server-rhscl-7-rpms
    echo 'installed rhel optional repos'
fi

##
## passenger + foreman-proxy workaround
##
##     https://github.com/phusion/passenger/issues/1800#issuecomment-407146886
##
sudo yum-config-manager --enable \
    rhui-REGION-rhel-server-extras \
    rhui-REGION-rhel-server-optional
sudo yum install -y mod_passenger || sudo yum-config-manager --enable cr \
    && sudo yum install -y mod_passenger

##
## install puppet6x
##
rpm -Uvh https://yum.puppet.com/puppet6-release-el-7.noarch.rpm
yum install -y puppet-agent
echo 'puppet 6x installed'

##
## enable epel and foreman repositories
##
rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
yum -y install "http://yum.theforeman.org/releases/$FOREMAN_SHORT/el7/x86_64/foreman-release.rpm"
echo 'epel and foreman repositories enabled.'

##
## download + run foreman installer
##
yum -y install foreman-installer
foreman-installer

##
## configure foreman hostname
##
sed -i "1s/.*/127.0.0.1	$HOSTNAME/"	/etc/hosts
sed -i "1s/.*/$HOSTNAME/" /etc/hostname
hostnamectl set-hostname "$HOSTNAME"
echo "Configured hostname to $HOSTNAME"

##
## clean metadata, and clean presto
##
yum clean all
echo 'Cleaned metadata, and presto.'

##
## ensure proper firewalld rules
##
## Note: https://theforeman.org/manuals/1.9/#firewall-configuration
##
sudo yum -y install firewalld
sudo service firewalld start
firewall-cmd --permanent --zone=public --add-service=http
firewall-cmd --permanent --zone=public --add-service=https
firewall-cmd --permanent --zone=public --add-port=53/tcp
firewall-cmd --permanent --zone=public --add-port=69/tcp
firewall-cmd --permanent --zone=public --add-port=80/tcp
firewall-cmd --permanent --zone=public --add-port=443/tcp
firewall-cmd --permanent --zone=public --add-port=8140/tcp
firewall-cmd --permanent --zone=public --add-port=8443/tcp
firewall-cmd --reload
firewall-cmd --zone=public --list-all
echo 'Firewalld rules implemented.'

##
## allow selinux rule for httpd
##
sudo setsebool -P httpd_read_user_content 1

##
## install foreman
##
foreman-installer
echo 'Foreman installed.'

##
## ensure ownership
##
sudo chown -R puppet:root /etc/puppetlabs/

##
## allow all puppetagents to connect to puppetserver
##
echo '*' >> /etc/puppetlabs/puppet/autosign.conf

##
## install r10k
##
## Note: older gem is also installed with ruby.
##
"${PUPPET_PATH}/gem" install r10k

##
## update path: will exists after reboot and within
##     current subshell, or duration of script.
##
if [[ ":$PATH:" != *":$PUPPET_PATH:"* ]]; then
    NEW_PATH="${PATH}:${PUPPET_PATH}"
    export PATH=NEW_PATH
    echo "export PATH='$NEW_PATH'" >> ~/.bashrc
    . ~/.bashrc
fi

##
## reboot to apply above changes
##
if [ "$REBOOT" = 'true' ]; then
    sudo reboot
fi
